<launch>

  <arg name="run_demo_app1" default="false"/>
  <arg name="effort_control" default="false"/>
  <arg name="velocity_control" default="false"/>
  <arg name="namespace" default="xarm"/>
  <arg name="add_gripper" default="false" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- Load joint state controller -->
  <rosparam file="$(find xarm_controller)/config/xarm6_joint_state_controller.yaml" command="load"/>
  <node name="joint_state_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"
    args="joint_state_controller"/>

  <!-- Load trajectory controller for xArm by default -->
  <rosparam file="$(find xarm_controller)/config/xarm6_traj_controller.yaml" command="load"/>
  <arg name="xarm_traj_controller" value="$(eval 'xarm6_traj_controller_velocity' if arg('velocity_control') else 'xarm6_traj_controller')" />
  <node name="traj_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"
    args="$(arg xarm_traj_controller)"/>

  <!-- Load the position controllers -->
  <rosparam file="$(find xarm_controller)/config/xarm6_position_controllers.yaml" command="load"/>
  <node unless="$(eval arg('velocity_control') or arg('effort_control'))"
    name="position_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"
    args="--stopped
          joint1_position_controller joint2_position_controller
          joint3_position_controller joint4_position_controller
          joint5_position_controller joint6_position_controller
          "/>

  <!-- Load cartesian controller -->
  <rosparam file="$(find xarm_controller)/config/xarm6_cartesian_controller.yaml" command="load"></rosparam>
  <arg name="xarm_cartesian_motion_controller" value="$(eval 'xarm6_cartesian_motion_controller_velocity' if arg('velocity_control') else 'xarm6_cartesian_motion_controller')" />
  <node name="cartesian_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"
    args="--stopped $(arg xarm_cartesian_motion_controller)"/>

  <rosparam if="$(arg add_gripper)"
    file="$(find xarm_controller)/config/xarm_gripper_controller.yaml" command="load"/>
  <node if="$(arg add_gripper)" name="gripper_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"
    args="gripper_controller"/>

  <rosparam if="$(arg add_gripper)"
    file="$(find xarm_controller)/config/xarm_gripper_controller.yaml" command="load"/>
  <node if="$(arg add_gripper)" name="gripper_trajectory_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"
    args="--stopped gripper_trajectory_controller "/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/$(arg namespace)/joint_states" />
  </node>

  <!-- run_demo: start demo controller node, (pure position control) -->
  <node if="$(arg run_demo_app1)" name="continuous_cmds"
    pkg="xarm6_demo_app1"
    type="xarm6_demo_app1"
    respawn="false"
    output="screen"
    ns="/$(arg namespace)"/>

</launch>
